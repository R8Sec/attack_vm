---
- name: Check if Meslo font is already installed
  stat:
    path: "{{ ansible_user_dir }}/.local/share/fonts/Meslo"
  register: font_installed

- name: Create Temporary Directory
  tempfile:
    state: directory
  register: temp_dir
  when: font_installed.stat.exists == False

- name: Download font zip file and save to temporary directory
  get_url:
    url: "{{ font_zip_url }}"
    dest: "{{ temp_dir.path }}/{{ font_zip_url | basename }}"
    mode: 0755 
  when: font_installed.stat.exists == False

- name: Create ~/.local/share/fonts/Meslo
  file:
    path: "{{ ansible_user_dir }}/.local/share/fonts/Meslo"
    state: directory
    mode: 0755
  when: font_installed.stat.exists == False

- name: Unzip font files to ~/.local/share/fonts/Meslo
  unarchive:
    src: "{{ temp_dir.path }}/{{ font_zip_url | basename }}"
    dest: "{{ ansible_user_dir }}/.local/share/fonts/Meslo"
  when: font_installed.stat.exists == False
    
- name: Ensure ~/.config/terminator Directory Exists
  file:
    path: "{{ ansible_user_dir }}/.config/terminator"
    state: directory
    mode: 0755

- name: Copy Terminator config file
  copy:
    src: "terminator_config"
    dest: "{{ ansible_user_dir }}/.config/terminator/config"
    force: yes

- name: Check if Tmux Plugin Manager repo exists
  stat:
    path: "{{ ansible_user_dir}}/.tmux/plugins/tpm"
  register: tpm_installed

- name: Clone Tmux Plugin Manager repo
  command: git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
  when: tpm_installed.stat.exists == False

- name: Copy .tmux.conf
  copy:
    src: ".tmux.conf"
    dest: "{{ ansible_user_dir }}/.tmux.conf"
    force: yes

- name: Copy .zshrc
  copy:
    src: ".zshrc"
    dest: "{{ ansible_user_dir }}/.zshrc"
    force: yes

- name: Copy .vimrc
  copy:
    src: ".vimrc"
    dest: "{{ ansible_user_dir }}/.vimrc"
    force: yes

- name: Delete Temporary Directory
  file:
    path: "{{ temp_dir.path }}"
    state: absent
  when: font_installed.stat.exists == False

- name: Check if Powerlevel10k repository exists
  stat:
    path: "{{ ansible_user_dir }}/.powerlevel10k"
  register: powerlevel10k_repo
  
- name: Clone Powerlevel10k repository
  command: "git clone --depth=1 https://github.com/romkatv/powerlevel10k.git {{ ansible_user_dir }}/.powerlevel10k"
  when: powerlevel10k_repo.stat.exists == False

- name: Edit .zshrc file to source Powerlevel10k theme
  lineinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    line: "source {{ ansible_user_dir }}/.powerlevel10k/powerlevel10k.zsh-theme"
    insertafter: EOF
    state: present
